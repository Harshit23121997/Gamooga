{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScriptTagInput!) {\\n        scriptTagCreate(input: $input) {\\n            scriptTag {\\n                id\\n            }\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\n\nfunction ScriptPage() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  __jsx(\"button\", {\n    onClick: function onClick() {\n      createScripts({\n        variables: {\n          input: {\n            src: \"http://eb5693ad345c.ngrok.io/sw.js\",\n            displayScope: \"ALL\"\n          }\n        },\n        refetchQueries: [{\n          query: QUERY_SCRIPTTAGS\n        }]\n      });\n    }\n  }, \"Create Script Tag\");\n}\n\n_s(ScriptPage, \"j74IsTtzF+f6WayNfWq/yCjSYK0=\", false, function () {\n  return [useMutation];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["C:/Users/Harshit/Desktop/Pureplay/Gamooga/pages/script-page.js"],"names":["useQuery","useMutation","gql","CREATE_SCRIPT_TAG","ScriptPage","createScripts","variables","input","src","displayScope","refetchQueries","query","QUERY_SCRIPTTAGS"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAGA,IAAMC,iBAAiB,GAAGD,GAAH,mBAAvB;;AAcA,SAASE,UAAT,GAAqB;AAAA;;AAAA,qBACOH,WAAW,CAACE,iBAAD,CADlB;AAAA;AAAA,MACVE,aADU;;AAEjB;AAAQ,IAAA,OAAO,EAAE,mBAAM;AACXA,MAAAA,aAAa,CAAC;AACZC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLC,YAAAA,GAAG,EAAE,oCADA;AAELC,YAAAA,YAAY,EAAE;AAFT;AADE,SADC;AAOZC,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEC;AAAT,SAAD;AAPJ,OAAD,CAAb;AASD;AAVX;AAcH;;GAhBQR,U;UACmBH,W;;;KADnBG,U;AAkBT,eAAeA,UAAf","sourcesContent":["import { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\n    mutation scriptTagCreate($input: ScriptTagInput!) {\r\n        scriptTagCreate(input: $input) {\r\n            scriptTag {\r\n                id\r\n            }\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nfunction ScriptPage(){ \r\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\r\n    <button onClick={() => {\r\n                createScripts({\r\n                  variables: {\r\n                    input: {\r\n                      src: \"http://eb5693ad345c.ngrok.io/sw.js\",\r\n                      displayScope: \"ALL\"\r\n                    }\r\n                  },\r\n                  refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\r\n                })\r\n              }}\r\n            >\r\n              Create Script Tag\r\n            </button>\r\n}\r\n\r\nexport default ScriptPage"]},"metadata":{},"sourceType":"module"}